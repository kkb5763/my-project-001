server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

security:
  jwt:
    token:
      secret-key: sampleplplplpllplkjhkjhlkjlijihkuhkbasdsadasdsadsageafejjygjuhkjlijlijlknkjhjyuyfjyfjf
      expire-length: 864000000

#CREATE DATABASE mydatabase;
#GRANT ALL PRIVILEGES ON mydatabase.* TO 'myuser'@'%';
#FLUSH PRIVILEGES;

# spring:
#   datasource:
#     driver-class-name: org.mariadb.jdbc.Driver # mariadb
#     url: jdbc:mariadb://34.64.69.109:3306/mydatabase?serverTimezone=Asia/Seoul&useSSL=false&allowPublicKeyRetrieval=true
#     username: myuser     # root
#     password: mypassword # q1w2e3r4!!

spring:
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password:
  h2:
    console:
      enabled: true
  mvc:
    view:
      prefix: /templates/
      suffix: .mustache

  jpa:
    hibernate:
      ddl-auto: update #create, update, none
      dialect: org.hibernate.dialect.MariaDBDialect
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true

  security:

    oauth2:
      client:
        registration:
          google: # /oauth2/authorization/google 이 주소를 동작하게 한다.
            client-id: 머시기
            client-secret: 머시기
            scope:
            - email
            - profile
            
          facebook:
            client-id: 머시기
            client-secret: 머시기
            scope:
            - email
            - public_profile
          
          # 네이버는 OAuth2.0 공식 지원대상이 아니라서 provider 설정이 필요하다.
          # 요청주소도 다르고, 응답 데이터도 다르기 때문이다.
          naver:
            client-id: 머시기
            client-secret: 머시기
            scope:
            - name
            - email
            - profile_image
            client-name: Naver # 클라이언트 네임은 구글 페이스북도 대문자로 시작하더라.
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/naver

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response # 회원정보를 json의 response 키값으로 리턴해줌.